1. Создайте текстовый файл как в первом ДЗ по Terminal.
 	touch HW2_Git_Leonova	
 2. Сценарий перенесите в этот файл.
 	vim HW2_Git_Leonova
 3. На против каждого действия - напишите команду в GitBash.
 	--I--
	write text
JSON
 4. Создать внешний репозиторий c названием JSON.
 	1) Зайти в свой аккаунт на сайте https://github.com.
	2) Нажать Repositories -> New.
	3) Написать в поле Repositories name - JSON. Выбрать Public и Add a README file. Нажать на кнопку Create repository.
	4) Отобразилось в общем списке репозиториев.
 5. Клонировать репозиторий JSON на локальный компьютер.
 	git clone https://github.com/Violetta-VC/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
 	touch json/new.json
 7. Добавить файл под гит.
 	git add new.json
 8. Закоммитить файл.
	git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий.
	git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	vim new.json
--I--
{
        "ФИО":"Leonova Violetta",
        "возраст":32,
        "количество домашних животных":"0",
        "будущая желаемая зарплата":"500 y.e"
}
 11. Отправить изменения на внешний репозиторий.
	git add new.json
	git commit -m "modified file new.json"
	git push
 12. Создать файл preferences.json
	 cat > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 	{
        "Любимый фильм":"1+1",
        "Любимый сериал":"Игра престолов",
        "Любимая еда":"мясо в любом виде",
        "Любимое время года":"поздняя весна",
        "сторона которую хотели бы посетить":"Япония"
	}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	{
        "Skills_1":"Sociability",
        "Skills_2":"Go-getter",
        "Skills_3":"Patience"
	}
 15. Отправить сразу 2 файла на внешний репозиторий.
	git add .
	git commit -m "add preferences and skills"
	git push
 16. На веб интерфейсе создать файл bug_report.json.
	Creat -> New file -> bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	Edit this file
{
  "Title":"Четко и кратко описывает суть бага. Оформляется в виде одного предложения, состоящего из трех частей отвечающих на вопросы Что? Где? Когда?",
  "Steps":"Четкое, последовательное описание шагов / действий, которые необходимо совершить, чтоб воспроизвести баг со всей необходимой информацией",
  "Actual result":"Результат, который мы видим",
  "Expected result":"Результат, который мы хотели / ожидали увидеть"
 }
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
	git pull
	git push

 XML
 21. Создать внешний репозиторий c названием XML.
	1) Зайти в свой аккаунт на сайте https://github.com.
	2) Нажать Repositories -> New.
	3) Написать в поле Repositories name - XML. Выбрать Public и Add a README file. Нажать на кнопку Create repository.
	4) Отобразилось в общем списке репозиториев.
 22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/Violetta-VC/XML.git
 23. Внутри локального XML создать файл “new.xml”.
	touch xml/new.xml
 24. Добавить файл под гит.
	cd xml
	git add new.xml
 25. Закоммитить файл.
	git commit -m "add file new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
	git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 	<Person info>
        <ФИО>Leonova Violetta</ФИО>
        <возраст>32</возраст>
        <количество домашних животных>0</количество домашних животных>
        <будущая желаемая зарплата>500 y.e</будущая желаемая зарплата>
	</Person info>
 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m "modified file new.xml"
	git push
 29. Создать файл preferences.xml
	touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	vim preferences.xml
	<Preferences>
        <Любимый фильм>1+1</Любимый фильм>
        <любимый сериал>Игра престолов</любимый сериал>
        <любимая еда>мясо в любом виде</любимая еда>
        <любимое время года>поздняя весна</любимое время года>
 	<страна, которую хотели бы посетить>Япония</страна, которую хотели бы посетить> 
	</Preferences>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML.
	touch skills.xml
	vim skills.xml
	<Skills>
	<Skills_1>Sociability</Skills_1>
        <Skills_2>Go-getter</Skills_2>
        <Skills_3>Patience</Skills_3>
	</Skills>
 32.33 Сделать коммит в одну строку. Отправить сразу 2 файла на внешний репозиторий.
 	git add  preferences.xml && git commit -m "add file preferences.xml"
	git add  skills.xml && git commit -m "add file skills.xml"
	git push
 34. На веб интерфейсе создать файл bug_report.xml.
	Creat -> New file -> bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
		Edit this file
 	<Bug Report>
 	 <Title>Четко и кратко описывает суть бага. Оформляется в виде одного предложения, состоящего из трех частей отвечающих на вопросы Что? Где? Когда?</Title>
  	 <Steps>Четкое, последовательное описание шагов / действий, которые необходимо совершить, чтоб воспроизвести баг со всей необходимой информацией</Steps>
  	 <Actual result>Результат, который мы видим</Actual result>
 	 <Expected result>Результат, который мы хотели / ожидали увидеть</Expected result>
 	</Bug Report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
	git pull
	git push